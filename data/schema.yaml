# The app team are using this schema to generate a set of reference model objects
# See https://github.com/bbc/ArticleUIKit/tree/master/ArticleUIKitExampleTests/autogen-reference
# Whilst not solely for their benefit, the following have been added to the schema to improve their generated code:
# * fragmentAttrs
openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/no-name2/article/1.0.0
info:
  description: This is an early draft of an Article API definition for web and apps.
  version: '1.1.1'
  title: News web and apps article API
  contact:
    email: benjamin.hobbs@bbc.co.uk
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: news-developers
    description: Operations available to and wanted by news developers
paths:
  /article:
    get:
      tags:
        - news-developers
      summary: returns article/s
      operationId: getArticles
      description: |
        By passing in the appropriate parameters, you can return the appropriate article/s body from the system
      parameters:
        - in: query
          name: searchString
          description: pass the optional search string for looking up articles
          required: true
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/article'
        '400':
          description: bad input parameter/s
components:
  schemas:
    article:
      type: object
      required:
        - content
        - metadata
        - promo
      properties:
        content:
          type: object
          required:
            - model
          properties:
            model:
              type: object
              required:
                - blocks
              properties:
                blocks:
                  $ref: '#/components/schemas/blocks'
        metadata:
          type: object
          required:
            # - created   currently not in the optimo test feed
            - firstPublished
            - id
            - lastPublished
            - lastUpdated
            - locators
            - passport
            - tags
            - type
          properties:
            analyticsLabels:
              type: object
            category:
              enum:
                - analysis
                - askTheAudience
                - explainer
                - factCheck
                - feature
                - news
                - opinion
                - review
                - summary
              example: analysis
            blockTypes:
              type: array
              items:
                type: string
              minItems: 2
            created:
              type: number
            createdBy:
              type: string
            firstPublished:
              type: number
            id:
              type: string
            language:
              type: string

            lastPublished:
              type: number
            lastUpdated:
              type: number
            locators:
              type: object
              required:
                - optimoUrn
              properties:
                optimoUrn:
                  type: string
            options:
              type: object
            passport:
              type: object
              required:
                # - category  currently not in the optimo test datafeed
                - home
                - language
              properties:
                category:
                  enum:
                    - analysis
                    - askTheAudience
                    - explainer
                    - factCheck
                    - feature
                    - news
                    - opinion
                    - review
                    - summary
                  example: analysis
                  type: string
                genre:
                  type: string
                home:
                  example: 'http://www.bbc.co.uk/ontologies/passport/home/News'
                  type: string
                language:
                  example: 'en-gb'
                  type: string
            relatedContent:
              type: object
              properties:
                groups:
                  type: object
                site:
                  type: object
                  properties:
                    name:
                      type: string
                    subType:
                      type: string
                    uri:
                      type: string
            tags:
              type: object
              properties:
                about:
                  type: array
                  items:
                    type: object
                    properties:
                      thingUri:
                        type: string
                        example: 'http://www.bbc.co.uk/things/2351f2b2-ce36-4f44-996d-c3c4f7f90eaa#id'
                      topicId:
                        type: string
                        example: 'cpwpy79d6dxt'
                      topicName:
                        type: string
                        example: 'Royal Wedding 2018'
                      curationType:
                        type: array
                        example:
                        items:
                          type: string
                      thingId:
                        type: string
                      thingLabel:
                        type: string
                      thingType:
                        type: array
                        example: ['Thing', 'Event']
                mentions:
                  type: array
                  items:
                    type: object
                    properties:
                      thingUri:
                        type: string
                        example: 'http://www.bbc.co.uk/things/2351f2b2-ce36-4f44-996d-c3c4f7f90eaa#id'
                      topicId:
                        type: string
                        example: 'cpwpy79d6dxt'
                      topicName:
                        type: string
                        example: 'Royal Wedding 2018'
                      curationType:
                        type: array
                        example:
                        items:
                          type: string
                      thingId:
                        type: string
                      thingLabel:
                        type: string
                      thingType:
                        type: array
                        example: ['Thing', 'Event']
            type:
              enum:
                - article
              type: string
            version:
              type: string
        promo:
          type: object
          required:
            - headlines
            - id
            - locators
            - summary
            - timestamp
          properties:
            headlines:
              type: object
              required:
                - seoHeadline
              #   - promoHeadline   currently not in the test optimo datafeed
              properties:
                seoHeadline:
                  example: 'UK pledges extra Â£44m for Channel border security'
                  type: string
                promoHeadline:
                  type: string
            id:
              type: string
            locators:
              type: object
              required:
                - optimoUrn
              properties:
                optimoUrn:
                  type: string
            summary:
              type: string
            timestamp:
              type: number

    # schema definitions for referred blocks below

    fragmentAttrs:
      type: array
      items:
        enum:
          - italic
          - bold
          - superscript
          - subscript
        type: string

    blocks:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/altText'
          - $ref: '#/components/schemas/aresMedia'
          - $ref: '#/components/schemas/aresMediaMetadata'
          - $ref: '#/components/schemas/caption'
          - $ref: '#/components/schemas/fragment'
          - $ref: '#/components/schemas/headline'
          - $ref: '#/components/schemas/image'
          - $ref: '#/components/schemas/paragraph'
          - $ref: '#/components/schemas/rawImage'
          - $ref: '#/components/schemas/subheadline'
          - $ref: '#/components/schemas/text'
          - $ref: '#/components/schemas/urlLink'
          - $ref: '#/components/schemas/video'
      minItems: 2

    altText:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
        type:
          enum:
            - altText
          type: string

    aresMedia:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
          required:
            - blocks

    aresMediaMetadata:
      type: object
      required:
        - model
        - type
      properties:
        model:
          type: object
          required:
            - advertising
            - embedding
            - id
            - imageUrl
            - title
            - subType
            - synopses
            - versions
          properties:
            advertising:
              type: boolean
              example: true
            availableUntil:
              type: number
              example: 1558511776575
            duration:
              type: number
              example: 43
            embedding:
              type: boolean
              example: true
            format:
              type: string # probably should be an enum in the future
              example: audio_video
            id:
              type: string
              example: 'p01jvmg5'
            imageCopyright:
              type: string
              example: 'BBC'
            imageUrl:
              type: string
              example: 'ichef.test.bbci.co.uk/images/ic/$recipe/p01jvmms.jpg'
            subType:
              type: string # probably should be an enum in the future
              example: 'clip'
            syndication:
              type: object
              properties:
                destinations:
                  type: array
            synopses:
              type: object
              properties:
                long:
                  type: string
                  example: "New Zealand suffered a spectacular capsize in their America's Cup semi-final against Great Britain but lead the best-of-nine series 3-1.\nThe catamaran fell forwards on the run-in to the start, leaving some crew suspended in the hull above the water.\nThree were thrown overboard but all of New Zealand's crew were accounted for."
                medium:
                  type: string
                  example: 'The catamaran fell forwards on the run-in to the start, leaving some crew suspended in the hull above the water.'
                short:
                  type: string
                  example: "New Zealand suffered a spectacular capsize in their America's Cup semi-final against Great"
            title:
              type: string
              example: "Dramatic capsize in America's Cup yacht"
            type:
              enum:
                - aresMediaMetadata
              type: string
            versions:
              type: array
              items:
                type: object
                required:
                  - versionId
                  - types
                  - duration
                  - availableTerritories
                properties:
                  availableTerritories:
                    type: object
                    properties:
                      nonUk:
                        type: boolean
                        example: true
                      uk:
                        type: boolean
                        example: true
                  duration:
                    type: number
                    example: 191
                  types:
                    type: array
                    example: ['Original']
                  versionId:
                    type: string
                    example: 'p01jvmg7'
                  warnings:
                    type: object
                    properties:
                      long:
                        type: string
                        example: 'Contains some strong language.'
                      medium:
                        type: string
                        example: 'Contains some strong language.'
                      short:
                        type: string
                        example: 'Contains some strong language.'

    caption:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
        type:
          enum:
            - caption
          type: string

    fragment:
      type: object
      required:
        - model
        - type
      properties:
        model:
          type: object
          required:
            - text
            - attributes
          properties:
            text:
              type: string
            attributes:
              $ref: '#/components/schemas/fragmentAttrs'
        type:
          enum:
            - fragment
          type: string

    headline:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
        type:
          enum:
            - headline
          type: string

    image:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
        type:
          enum:
            - image
          type: string

    paragraph:
      type: object
      required:
        - model
        - type
      properties:
        model:
          type: object
          required:
            - blocks
            - text
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
            text:
              type: string
        type:
          enum:
            - paragraph
          type: string

    rawImage:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            copyrightHolder:
              example: BBC
              type: string
            height:
              example: 420
              type: number
            locator:
              example: 'https://fishchips.co.uk/images/ic/640x360/p052ww1r.jpg'
              type: string
            originCode:
              example: 'cpsprodpb'
              type: string
            width:
              example: 640
              type: number
          required:
            - copyrightHolder
            - height
            - locator
            - originCode
            - width
          type: object
        type:
          enum:
            - rawImage
          type: string

    subheadline:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
        type:
          enum:
            - subheadline
          type: string

    text:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
        type:
          enum:
            - text
          type: string

    urlLink:
      type: object
      required:
        - model
        - type
      properties:
        model:
          type: object
          required:
            - text
            - locator
            - blocks
          properties:
            text:
              type: string
            locator:
              type: string
              example: 'https://www.bbc.com/news/articles/c0000000027o'
            blocks:
              $ref: '#/components/schemas/blocks'
        type:
          enum:
            - urlLink
          type: string

    video:
      type: object
      required:
        - model
        - type
      properties:
        model:
          properties:
            blocks:
              $ref: '#/components/schemas/blocks'
          type: object
          required:
            - blocks
        type:
          enum:
            - video
          type: string
